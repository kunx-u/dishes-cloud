<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.etoak.mapper.DishesMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.etoak.entity.Dishes">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="url" property="url" />
        <result column="main" property="main" />
        <result column="main_num" property="mainNum" />
        <result column="minor" property="minor" />
        <result column="minor_num" property="minorNum" />
        <result column="seasoning" property="seasoning" />
        <result column="seasoning_num" property="seasoningNum" />
        <result column="description" property="description" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, url, main, main_num, minor, minor_num, seasoning, seasoning_num, description, create_time, update_time
    </sql>

    <sql id="getList_sql">
        select t.id,
               t.name,
               t.url,
               t.main,
               main.name as mainName,
               t.main_num,
               t.minor,
               minor.name as minorName,
               t.minor_num,
               t.seasoning,
               seasoning.name seasoningName,
               t.seasoning_num,
               t.description,
               t.create_time,
               t.update_time
        from t_dishes t
                 left join t_ingredients main on main.id = t.main
                 left join t_ingredients minor on minor.id = t.minor
                 left join t_ingredients seasoning on seasoning.id = t.seasoning
    </sql>
    <select id="getList" parameterType="com.etoak.entity.Dishes" resultType="com.etoak.vo.DishVO">
        <include refid="getList_sql"></include>
        <trim prefix="where" prefixOverrides="and | or">
            <if test="name !=null and name !=''">
                AND t.name like '${name}%'
            </if>
            <if test="main !=null">
                AND t.main = #{main}
            </if>
            <if test="minor !=null">
                AND t.minor = #{minor}
            </if>
            <if test="seasoning !=null">
                AND t.seasoning =#{seasoning}
            </if>
        </trim>
    </select>

</mapper>
